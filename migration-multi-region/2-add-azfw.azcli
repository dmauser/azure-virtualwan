
#Paramters
rg=lab-hsmulti-region
hub1name=hub1
hub2name=hub2
hub1location=eastus2
hub2location=centralus
VmAdminUsername=azureuser
VmAdminPassword=Msft123Msft123
mypip=$(curl -4 ifconfig.io -s) #Captures your local Public IP and adds it to NSG to restrict access to SSH only for your Public IP.


echo Deploying Azure Firewall...
# Deploy Azure Firewall on az-$hub1name-vnet and az-$hub2name-vnet

# Create Firewall Policy for each region:
echo Creating Azure Firewall Policy for each region...
az network firewall policy create -g $rg-$hub1name -n $hub1location-AZFW-Policy --threat-intel-mode Alert --location $hub1location --sku $firewalltier --output none
az network firewall policy create -g $rg-$hub2name -n $hub2location-AZFW-Policy --threat-intel-mode Alert --location $hub2location --sku $firewalltier --output none

# Create firewall policy rule collection group for each region:
echo Creating Azure Firewall Policy Rule Collection Group for each region...
az network firewall policy rule-collection-group create -g $rg-$hub1name --policy-name $hub1location-AZFW-Policy -n NetworkRuleCollectionGroup --priority 200 --output none
az network firewall policy rule-collection-group create -g $rg-$hub2name --policy-name $hub2location-AZFW-Policy -n NetworkRuleCollectionGroup --priority 200 --output none

# Create a any to any Network Rule Collection for each region:
# For $hub1location-AZFW-Policy
az network firewall policy rule-collection-group collection add-filter-collection \
 --resource-group $rg-$hub1name \
 --policy-name $hub1location-AZFW-Policy \
 --name GenericCollection \
 --rcg-name NetworkRuleCollectionGroup \
 --rule-type NetworkRule \
 --rule-name AnytoAny \
 --action Allow \
 --ip-protocols "Any" \
 --source-addresses "*" \
 --destination-addresses  "*" \
 --destination-ports "*" \
 --collection-priority 100 \
 --output none

# For $hub1location-AZFW-Policy
az network firewall policy rule-collection-group collection add-filter-collection \
 --resource-group $rg-$hub1name \
 --policy-name $hub2location-AZFW-Policy\
 --name GenericCollection \
 --rcg-name NetworkRuleCollectionGroup \
 --rule-type NetworkRule \
 --rule-name AnytoAny \
 --action Allow \
 --ip-protocols "Any" \
 --source-addresses "*" \
 --destination-addresses  "*" \
 --destination-ports "*" \
 --collection-priority 100 \
 --output none

#Build Azure Firewall / Note this section takes few minutes to complete.
echo Building Azure Firewall...
#Spoke 2
# Create Azure Firewall Subnet and Management Subnets
az network vnet subnet create -g $rg-$hub1name --vnet-name az-$hub1name-vnet -n AzureFirewallSubnet --address-prefixes 10.2.0.64/26 --output none
az network public-ip create --name az-$hub1name-vnet-azfw-pip --resource-group $rg-$hub1name --location $hub1location --allocation-method static --sku standard --output none --only-show-errors

az network vnet subnet create -g $rg-$hub1name --vnet-name az-$hub1name-vnet -n AzureFirewallManagementSubnet --address-prefixes 10.2.0.128/26 --output none
az network public-ip create --name az-$hub1name-vnet-azfw-mgmtpip --resource-group $rg-$hub1name --location $hub1location --allocation-method static --sku standard --output none --only-show-errors

# Create Azure Firewall
az network firewall create --name az-$hub1name-vnet-azfw --resource-group $rg-$hub1name --location $hub1location --firewall-policy $hub1location-AZFW-Policy --vnet-name az-$hub1name-vnet --sku AZFW_VNet --tier basic --conf-name FW-config --m-conf-name FW-mgmconfig --m-public-ip az-$hub1name-vnet-azfw-mgmtpip --output none
# Add Public IP to the firewall
az network firewall ip-config create --firewall-name az-$hub1name-vnet-azfw --name FW-config --m-name FW-mgmconfig --public-ip-address az-$hub1name-vnet-azfw-pip --m-public-ip-address az-$hub1name-vnet-azfw-mgmtpip --m-vnet-name az-$hub1name-vnet --resource-group $rg-$hub1name --vnet-name az-$hub1name-vnet --output none
az network firewall update --name az-$hub1name-vnet-azfw --resource-group $rg-$hub1name --output none --only-show-errors

#az-$hub2name-vnet
# Create Azure Firewall Subnet and Management Subnets
az network vnet subnet create -g $rg-$hub2name --vnet-name az-$hub2name-vnet -n AzureFirewallSubnet --address-prefixes 10.4.0.64/26 --output none
az network public-ip create --name az-$hub2name-vnet-azfw-pip --resource-group $rg-$hub2name --location $hub2location  --allocation-method static --sku standard --output none --only-show-errors

az network vnet subnet create -g $rg-$hub2name --vnet-name az-$hub2name-vnet -n AzureFirewallManagementSubnet --address-prefixes 10.4.0.128/26 --output none
az network public-ip create --name az-$hub2name-vnet-azfw-mgmtpip --resource-group $rg-$hub2name --location $hub2location --allocation-method static --sku standard --output none --only-show-errors
# Create Azure Firewall
az network firewall create --name az-$hub2name-vnet-azfw --resource-group $rg-$hub2name --location $hub2location --firewall-policy $hub2location-AZFW-Policy --vnet-name az-$hub2name-vnet --sku AZFW_VNet --tier basic --conf-name FW-config --m-conf-name FW-mgmconfig --m-public-ip az-$hub2name-vnet-azfw-mgmtpip --output none
# Add Public IP to the firewall
az network firewall ip-config create --firewall-name az-$hub2name-vnet-azfw --name FW-config --public-ip-address az-$hub2name-vnet-azfw-pip --m-public-ip-address az-$hub2name-vnet-azfw-mgmtpip --m-vnet-name az-$hub2name-vnet --resource-group $rg-$hub2name --vnet-name az-$hub2name-vnet --output none
az network firewall update --name az-$hub2name-vnet-azfw --resource-group $rg-$hub2name --output none

#Creating Log Analytics Workspaces
## Log Analytics workspace name. 
Workspacename1=AZFirewall-$hub1location-Logs 
Workspacename2=AZFirewall-$hub2location-Logs 

echo Creating Log Analytics Workspaces...
msinsights=$(az provider show -n microsoft.insights --query registrationState -o tsv)
if [ $msinsights == 'NotRegistered' ] || [ $msinsights == 'Unregistered' ]; then
az provider register -n microsoft.insights --accept-terms
 prState=''
 while [[ $prState != 'Registered' ]];
 do
    prState=$(az provider show -n microsoft.insights --query registrationState -o tsv)
    echo "MS Insights State="$prState
    sleep 5
 done
fi
#az-$hub1name-vnet-azfw
az monitor log-analytics workspace create -g $rg-$hub1name --workspace-name $Workspacename1 --location $hub1location --no-wait
#az-$hub2name-vnet-azfw
az monitor log-analytics workspace create -g $rg-$hub2name --workspace-name $Workspacename2 --location $hub2location --no-wait

#EnablingAzure Firewall diagnostics
#az-$hub1name-vnet-azfw
az monitor diagnostic-settings create -n 'toLogAnalytics' \
--resource $(az network firewall show --name az-$hub1name-vnet-azfw --resource-group $rg-$hub1name --query id -o tsv) \
--workspace $(az monitor log-analytics workspace show -g $rg-$hub1name --workspace-name $Workspacename1 --query id -o tsv) \
--logs '[{"category":"AzureFirewallApplicationRule","Enabled":true}, {"category":"AzureFirewallNetworkRule","Enabled":true}, {"category":"AzureFirewallDnsProxy","Enabled":true}]' \
--metrics '[{"category": "AllMetrics","enabled": true}]' \
--output none
#az-$hub2name-vnet-azfw
az monitor diagnostic-settings create -n 'toLogAnalytics' \
--resource $(az network firewall show --name az-$hub2name-vnet-azfw --resource-group $rg-$hub2name --query id -o tsv) \
--workspace $(az monitor log-analytics workspace show -g $rg-$hub2name --workspace-name $Workspacename2 --query id -o tsv) \
--logs '[{"category":"AzureFirewallApplicationRule","Enabled":true}, {"category":"AzureFirewallNetworkRule","Enabled":true}, {"category":"AzureFirewallDnsProxy","Enabled":true}]' \
--metrics '[{"category": "AllMetrics","enabled": true}]' \
--output none

echo Updating indirect spoke UDRs to use Firewall as next hop...
#UDRs for Spoke 5 and 6
## Creating UDR + Disable BGP Propagation
az network route-table create --name RT-to-az-$hub1name-vnet-AzFW  --resource-group $rg-$hub1name --location $hub1location --disable-bgp-route-propagation true --output none
## Default route to AzFW
az network route-table route create --resource-group $rg-$hub1name --name Default-to-AzFw --route-table-name RT-to-az-$hub1name-vnet-AzFW \
--address-prefix 0.0.0.0/0 \
--next-hop-type VirtualAppliance \
--next-hop-ip-address $(az network firewall show --name az-$hub1name-vnet-azfw --resource-group $rg-$hub1name --query "ipConfigurations[].privateIPAddress" -o tsv) \
--output none
## Associated RT-Hub-to-AzFW to Spoke 5 and 6.
az network vnet subnet update -n main -g $rg-$hub1name --vnet-name spoke5 --route-table RT-to-az-$hub1name-vnet-AzFW --output none
az network vnet subnet update -n main -g $rg-$hub1name --vnet-name spoke6 --route-table RT-to-az-$hub1name-vnet-AzFW --output none

#UDRs for Spoke 7 and 8
## Creating UDR + Disable BGP Propagation
az network route-table create --name RT-to-az-$hub2name-vnet-AzFW  --resource-group $rg-$hub2name --location $hub2location --disable-bgp-route-propagation true --output none
## Default route to AzFW
az network route-table route create --resource-group $rg-$hub2name --name Default-to-AzFw --route-table-name RT-to-az-$hub2name-vnet-AzFW \
--address-prefix 0.0.0.0/0 \
--next-hop-type VirtualAppliance \
--next-hop-ip-address $(az network firewall show --name az-$hub2name-vnet-azfw --resource-group $rg-$hub2name --query "ipConfigurations[].privateIPAddress" -o tsv) \
--output none
## Associated RT-Hub-to-AzFW to Spoke 7 and 8.
az network vnet subnet update -n main -g $rg-$hub2name --vnet-name spoke7 --route-table RT-to-az-$hub2name-vnet-AzFW --output none
az network vnet subnet update -n main -g $rg-$hub2name --vnet-name spoke8 --route-table RT-to-az-$hub2name-vnet-AzFW --output none
